(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    157913,       3148]
NotebookOptionsPosition[    154628,       3086]
NotebookOutlinePosition[    155082,       3104]
CellTagsIndexPosition[    155039,       3101]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Dianne Hansford", "Text",
 CellChangeTimes->{{3.6689579274000626`*^9, 
  3.6689579327513685`*^9}},ExpressionUUID->"1b4daf78-738e-fe44-af4f-\
1a39a058771a"],

Cell[CellGroupData[{

Cell["B - spline curves in MM", "Title",
 CellChangeTimes->{{3.668953689833688*^9, 
  3.668953701609361*^9}},ExpressionUUID->"0c640dae-b062-3c48-b26f-\
74d66bf0ea6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"pick", " ", "a", " ", "data", " ", "set"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dataset", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"dataset", " ", "\[Equal]", " ", "1"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", "3"}], ";", "  ", 
        RowBox[{"(*", " ", "degree", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"ll", "=", "10"}], ";", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{"domain", " ", "intervals"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"numd", " ", "=", " ", 
         RowBox[{"n", "+", "ll", "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dd", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.7"}], ",", 
             RowBox[{"-", "0.5"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.2"}], ",", 
             RowBox[{"-", "0.1"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.1"}], ",", "0.4"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.3"}], ",", "0.5"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.6"}], ",", "0.4"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.5"}], ",", "0.0"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.0", ",", 
             RowBox[{"-", "0.1"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.0"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.6", ",", "0.4"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.3", ",", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "0.4"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.2", ",", 
             RowBox[{"-", "0.1"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"0.7", ",", 
             RowBox[{"-", "0.5"}]}], "}"}]}], "\[IndentingNewLine]", 
          "}"}]}]}], ")"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"dataset", " ", "\[Equal]", " ", "2"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", "3"}], ";", "  ", 
        RowBox[{"(*", " ", "degree", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"ll", "=", "4"}], ";", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{"domain", " ", "intervals"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"numd", " ", "=", " ", 
         RowBox[{"n", "+", "ll", "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dd", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "x", "]"}], "//", "N"}], ",", " ", 
             RowBox[{
              RowBox[{"Sin", "[", "x", "]"}], "//", "N"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "numd"}], "}"}]}], "]"}]}]}], ")"}]}],
      "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Linear", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"dataset", " ", "\[Equal]", " ", "3"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", "3"}], ";", "  ", 
        RowBox[{"(*", " ", "degree", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"ll", "=", "1"}], ";", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{"domain", " ", "intervals"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"numd", " ", "=", " ", 
         RowBox[{"n", "+", "ll", "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dd", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "numd"}], "}"}]}], "]"}]}]}], ")"}]}],
      "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"data", " ", "set", " ", "for", " ", "example"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"dataset", " ", "\[Equal]", " ", "4"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", "3"}], ";", "  ", 
        RowBox[{"(*", " ", "degree", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"ll", "=", "7"}], ";", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{"domain", " ", "intervals"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"numd", " ", "=", " ", 
         RowBox[{"n", "+", "ll", "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dd", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "numd"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v", " ", "=", " ", "1.0"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", "=", "v"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", "=", " ", "v"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", "2"}], "]"}], "]"}], " ", "=", " ", "v"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"7", ",", "2"}], "]"}], "]"}], " ", "=", " ", "v"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"10", ",", "2"}], "]"}], "]"}], " ", "=", " ", "v"}]}], 
       "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"data", " ", "set", " ", "for", " ", 
     RowBox[{"example", " ", "--"}], " ", "not", " ", "for", " ", "demo", " ",
      "here"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"dataset", " ", "\[Equal]", " ", "5"}], ",", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"n", "=", "3"}], ";", "  ", 
        RowBox[{"(*", " ", "degree", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"ll", "=", "2"}], ";", "  ", 
        RowBox[{"(*", " ", 
         RowBox[{"domain", " ", "intervals"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"numd", " ", "=", " ", 
         RowBox[{"n", "+", "ll", "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"dd", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "numd"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"v", " ", "=", " ", "2.0"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], " ", "=", "v"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2"}], "]"}], "]"}], " ", "=", " ", "v"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1"}], "]"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dd", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "1"}], "]"}], "]"}], " ", "=", " ", "10"}], 
        ";"}], " ", "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"uniform", " ", "knots"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"knot", "=", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"i", "/", "ll"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"ll", "-", "1"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}], "//", 
      "N"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numk", " ", "=", " ", 
     RowBox[{"Length", "[", "knot", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Extract", " ", "the", " ", "juntion", " ", "points"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Evaluate", " ", "at", " ", "the", " ", "domain", " ", "knots"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jknots", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"knot", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"n", "+", "1"}], ",", 
         RowBox[{"numk", " ", "-", " ", "n"}], ",", "1"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jpts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"curve", "[", 
        RowBox[{"knot", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"n", "+", "1"}], ",", 
         RowBox[{"numk", " ", "-", " ", "n"}], ",", "1"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"curve", " ", "evaluation"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"curve", "[", "t_", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BSplineBasis", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "knot"}], "}"}], ",", "i", ",", "t"}], "]"}], 
        "*", 
        RowBox[{"dd", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "numd"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Plot", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cplot", "=", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"curve", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"knot", "[", 
          RowBox[{"[", 
           RowBox[{"n", "+", "1"}], "]"}], "]"}], ",", 
         RowBox[{"knot", "[", 
          RowBox[{"[", 
           RowBox[{"numk", "-", "n"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Green"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"points", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
        RowBox[{"Point", "[", "dd", "]"}], ",", 
        RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"dd", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ddplot", "=", 
     RowBox[{"ListLinePlot", "[", "dd", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jptsplot", " ", "=", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
        RowBox[{"Point", "[", "jpts", "]"}]}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ddplot", ",", " ", "cplot", ",", "points", ",", "jptsplot"}], 
      "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ddplot", ",", " ", "points"}], "}"}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<degree = \>\"", ",", "n", ",", "\"\<  Number segments  = \>\"", ",",
       "ll"}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<knots = \>\"", ",", "knot"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<junction knots = \>\"", ",", "jknots"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<First deboor point larger\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<deboor points =\>\"", ",", 
      RowBox[{"MatrixForm", "[", "dd", "]"}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6689537057335973`*^9, 3.6689537102968583`*^9}, {
   3.6689538605574527`*^9, 3.6689538766533732`*^9}, 3.668953910184291*^9, {
   3.668953962048258*^9, 3.6689539789132223`*^9}, {3.668954041944827*^9, 
   3.668954065563178*^9}, {3.6689541055704665`*^9, 3.668954143852656*^9}, {
   3.668954202158991*^9, 3.6689542611513653`*^9}, {3.6689543021777115`*^9, 
   3.6689546719288607`*^9}, {3.6689547267309947`*^9, 
   3.6689547966129923`*^9}, {3.6689548316379952`*^9, 3.668954905449217*^9}, {
   3.668954936571997*^9, 3.66895494676658*^9}, {3.668954982133603*^9, 
   3.668955187201332*^9}, {3.668955222764366*^9, 3.668955270420092*^9}, {
   3.668955768160561*^9, 3.6689557686555896`*^9}, {3.6689565128191533`*^9, 
   3.668956636288215*^9}, {3.69582988555794*^9, 3.6958299172638235`*^9}, {
   3.6958299924902115`*^9, 3.6958299925682116`*^9}, {3.721044021249668*^9, 
   3.7210440212808685`*^9}, {3.721044413140551*^9, 3.721044475620575*^9}, {
   3.721044510585237*^9, 3.7210445708013706`*^9}, {3.7210446033314285`*^9, 
   3.7210446067030344`*^9}, {3.7210446923037853`*^9, 
   3.7210448129674263`*^9}, {3.721044870219329*^9, 3.721044899017704*^9}, {
   3.721044929376849*^9, 3.721044952044689*^9}, {3.7210453405624995`*^9, 
   3.721045382981229*^9}, {3.7210454732037153`*^9, 3.7210455437695456`*^9}, {
   3.7213914561912317`*^9, 3.721391456316032*^9}, {3.7213915199329433`*^9, 
   3.7213915605710154`*^9}, {3.7213917014602013`*^9, 3.721391701631802*^9}, {
   3.721391784327547*^9, 3.721391821364724*^9}, {3.7213918606418324`*^9, 
   3.7213918607354326`*^9}, {3.721391998702098*^9, 3.721392012008921*^9}, {
   3.7213920532435923`*^9, 3.721392064491212*^9}, {3.9411586213604584`*^9, 
   3.941158644661915*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"c376f1eb-64b6-7e4d-8bd1-1440daa4f406"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[2], 
          LineBox[{{-0.7, -0.5}, {-0.2, -0.1}, {-0.1, 0.4}, {-0.3, 
           0.5}, {-0.6, 0.4}, {-0.5, 0.}, {0., -0.1}, {0.5, 0.}, {0.6, 0.4}, {
           0.3, 0.5}, {0.1, 0.4}, {0.2, -0.1}, {0.7, -0.5}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              
              Line[{{-0.7, -0.5}, {-0.2, -0.1}, {-0.1, 0.4}, {-0.3, 
               0.5}, {-0.6, 0.4}, {-0.5, 0.}, {0., -0.1}, {0.5, 0.}, {0.6, 
               0.4}, {0.3, 0.5}, {0.1, 0.4}, {0.2, -0.1}, {0.7, -0.5}}]}, 
             "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.7, 0.7}, {-0.5, 0.5}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[7, 360]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-0.7, 0.7}, {-0.5, 0.5}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          Line[{{-0.7, -0.5}, {-0.2, -0.1}, {-0.1, 0.4}, {-0.3, 0.5}, {-0.6, 
           0.4}, {-0.5, 0.}, {0., -0.1}, {0.5, 0.}, {0.6, 0.4}, {0.3, 0.5}, {
           0.1, 0.4}, {0.2, -0.1}, {0.7, -0.5}}]}, 
         "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {{-0.7, 0.7}, {-0.5, 0.5}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            PointSize[
             Rational[7, 360]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListLinePlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], FaceForm[Opacity[
          0.3]], LineBox[CompressedData["
1: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
gVm3ld3rJztgJk9669uTHDh+7F2ymlAnlNRMHnl8mgN6I1Rz9/2dMLftiPph
dQ5oy+4Sr3XrBN9B8wElPQ6IMJIJx6c6wVhx9RLzLAfOm1u4nxfugqqTxx0D
DTjQdcTLxFaxC0wS9aVLz3NA9NBeLh/3LvA9y8dbeYkDAuxnAnemuuB3goS/
vCkHVrfIijsKd8O6tPcno8w4QPCflr+k2A2Lc7FJWhYcqI2KYmx374aWV18Y
l2w48Gd82sVnshtmOVZpj2054M3e3g5CPVA0cfVD0TUOCErbiq3a3wNfVfhr
cMOBZ5Jnt4drD9wIKClecuBA2B+/P9ue9oBfyNgUjyMHnvavPGzOw/eZnoWz
a25woO88xrvqaw8c3khxWsBZM0iF08ZNgleSqiSOMwcmVe68jd5Igj22hMB0
Vw78M/+9TlSZBBpfj9oSb3KAqlL9dNiTBLUK3hTfW3i+msQ3P3tEgu792tHy
Hvj6XXseHIkjQbH7k3HX2xxoknrx4E4JCQILl0JWe+LxO1Q7L1RPgrGCZddY
nOsD/JbSSSS4/TVT6uUdPN+0b061MyR4seccW8SLA26TlXna/0hgsjvw+0Oc
XU0vHmldR4bUETXDcZx5kppmtLeR4bFt1E+9uxyIObOtu1aRDCvJN0bTcb7e
4VJz+DS+b77qkfmJ8+eWipz0c2QoudSYdeoeB2yqxYMErcgw3qN5LwDn3YrR
Rzxc8edHN+z5hPP2h35Xtvnj70vWbP6Bs9KbJM3mSDK0LlCMZbw50Ou5MuCU
QoaAn/UtGjinDFXwrSkiQ22cqII1zqIdzLLEWjKE02rv38T502bfjl09ZBiq
6Px4D+eDHzIOFw6RoR5Uh+7ivOjvQlOcJcN+Z945V5xfWgy/esdFAdmjyvPm
OCcelnbbvJ4CWW/rhk/h/PjrXuXQHRQo+VBQI4HzlNNW5tdDFNC78evRBD5f
yxg+fT0NCrjUvj1airPV2b/OqRcoIFFeRLuN830fYbkpOwoYX5Cy3YPzsTUG
15TvUEAsZqSXjsdrZ0+LgFcwBWw8hE/dx7m7/jl/QTwFjv98ESmOM6pr1mHh
fUSKZGDbOzwffiVu+dwfKBDJbv1xEOd431fbdxEpwGNwm68Ez2/MytXo0zQK
vOTl/HqO59+FvvT38hwFCFdyqH9wvVj/WOi5zE0F0/M9SaY4W+JzM9xIBXWZ
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
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               Thickness[Large], 
               RGBColor[0, 1, 0]], 
              Line[CompressedData["
1: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
gVm3ld3rJztgJk9669uTHDh+7F2ymlAnlNRMHnl8mgN6I1Rz9/2dMLftiPph
dQ5oy+4Sr3XrBN9B8wElPQ6IMJIJx6c6wVhx9RLzLAfOm1u4nxfugqqTxx0D
DTjQdcTLxFaxC0wS9aVLz3NA9NBeLh/3LvA9y8dbeYkDAuxnAnemuuB3goS/
vCkHVrfIijsKd8O6tPcno8w4QPCflr+k2A2Lc7FJWhYcqI2KYmx374aWV18Y
l2w48Gd82sVnshtmOVZpj2054M3e3g5CPVA0cfVD0TUOCErbiq3a3wNfVfhr
cMOBZ5Jnt4drD9wIKClecuBA2B+/P9ue9oBfyNgUjyMHnvavPGzOw/eZnoWz
a25woO88xrvqaw8c3khxWsBZM0iF08ZNgleSqiSOMwcmVe68jd5Igj22hMB0
Vw78M/+9TlSZBBpfj9oSb3KAqlL9dNiTBLUK3hTfW3i+msQ3P3tEgu792tHy
Hvj6XXseHIkjQbH7k3HX2xxoknrx4E4JCQILl0JWe+LxO1Q7L1RPgrGCZddY
nOsD/JbSSSS4/TVT6uUdPN+0b061MyR4seccW8SLA26TlXna/0hgsjvw+0Oc
XU0vHmldR4bUETXDcZx5kppmtLeR4bFt1E+9uxyIObOtu1aRDCvJN0bTcb7e
4VJz+DS+b77qkfmJ8+eWipz0c2QoudSYdeoeB2yqxYMErcgw3qN5LwDn3YrR
Rzxc8edHN+z5hPP2h35Xtvnj70vWbP6Bs9KbJM3mSDK0LlCMZbw50Ou5MuCU
QoaAn/UtGjinDFXwrSkiQ22cqII1zqIdzLLEWjKE02rv38T502bfjl09ZBiq
6Px4D+eDHzIOFw6RoR5Uh+7ivOjvQlOcJcN+Z945V5xfWgy/esdFAdmjyvPm
OCcelnbbvJ4CWW/rhk/h/PjrXuXQHRQo+VBQI4HzlNNW5tdDFNC78evRBD5f
yxg+fT0NCrjUvj1airPV2b/OqRcoIFFeRLuN830fYbkpOwoYX5Cy3YPzsTUG
15TvUEAsZqSXjsdrZ0+LgFcwBWw8hE/dx7m7/jl/QTwFjv98ESmOM6pr1mHh
fUSKZGDbOzwffiVu+dwfKBDJbv1xEOd431fbdxEpwGNwm68Ez2/MytXo0zQK
vOTl/HqO59+FvvT38hwFCFdyqH9wvVj/WOi5zE0F0/M9SaY4W+JzM9xIBXWZ
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
               "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-0.7, 0.7}, {-0.5, 0.4666666664380993}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            Automatic, "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[2], 
               FaceForm[
                Opacity[0.3]], 
               Thickness[Large], 
               RGBColor[0, 1, 0]]}, 
            "HighlightLabelingFunctions" -> <|
             "CoordinatesToolOptions" -> Identity, 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-0.7, 0.7}, {-0.5, 0.4666666664380993}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 432}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           Automatic, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              Thickness[Large], 
              RGBColor[0, 1, 0]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           Thickness[Large], 
           RGBColor[0, 1, 0]], 
          Line[CompressedData["
1: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
gVm3ld3rJztgJk9669uTHDh+7F2ymlAnlNRMHnl8mgN6I1Rz9/2dMLftiPph
dQ5oy+4Sr3XrBN9B8wElPQ6IMJIJx6c6wVhx9RLzLAfOm1u4nxfugqqTxx0D
DTjQdcTLxFaxC0wS9aVLz3NA9NBeLh/3LvA9y8dbeYkDAuxnAnemuuB3goS/
vCkHVrfIijsKd8O6tPcno8w4QPCflr+k2A2Lc7FJWhYcqI2KYmx374aWV18Y
l2w48Gd82sVnshtmOVZpj2054M3e3g5CPVA0cfVD0TUOCErbiq3a3wNfVfhr
cMOBZ5Jnt4drD9wIKClecuBA2B+/P9ue9oBfyNgUjyMHnvavPGzOw/eZnoWz
a25woO88xrvqaw8c3khxWsBZM0iF08ZNgleSqiSOMwcmVe68jd5Igj22hMB0
Vw78M/+9TlSZBBpfj9oSb3KAqlL9dNiTBLUK3hTfW3i+msQ3P3tEgu792tHy
Hvj6XXseHIkjQbH7k3HX2xxoknrx4E4JCQILl0JWe+LxO1Q7L1RPgrGCZddY
nOsD/JbSSSS4/TVT6uUdPN+0b061MyR4seccW8SLA26TlXna/0hgsjvw+0Oc
XU0vHmldR4bUETXDcZx5kppmtLeR4bFt1E+9uxyIObOtu1aRDCvJN0bTcb7e
4VJz+DS+b77qkfmJ8+eWipz0c2QoudSYdeoeB2yqxYMErcgw3qN5LwDn3YrR
Rzxc8edHN+z5hPP2h35Xtvnj70vWbP6Bs9KbJM3mSDK0LlCMZbw50Ou5MuCU
QoaAn/UtGjinDFXwrSkiQ22cqII1zqIdzLLEWjKE02rv38T502bfjl09ZBiq
6Px4D+eDHzIOFw6RoR5Uh+7ivOjvQlOcJcN+Z945V5xfWgy/esdFAdmjyvPm
OCcelnbbvJ4CWW/rhk/h/PjrXuXQHRQo+VBQI4HzlNNW5tdDFNC78evRBD5f
yxg+fT0NCrjUvj1airPV2b/OqRcoIFFeRLuN830fYbkpOwoYX5Cy3YPzsTUG
15TvUEAsZqSXjsdrZ0+LgFcwBWw8hE/dx7m7/jl/QTwFjv98ESmOM6pr1mHh
fUSKZGDbOzwffiVu+dwfKBDJbv1xEOd431fbdxEpwGNwm68Ez2/MytXo0zQK
vOTl/HqO59+FvvT38hwFCFdyqH9wvVj/WOi5zE0F0/M9SaY4W+JzM9xIBXWZ
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
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{-0.7, 0.7}, {-0.5, 0.4666666664380993}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 432}, "Axes" -> {True, True}, "LabelStyle" -> {},
         "AspectRatio" -> Automatic, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           Thickness[Large], 
           RGBColor[0, 1, 0]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
   {GrayLevel[0], PointSize[0.015], 
    PointBox[{{-0.7, -0.5}, {-0.2, -0.1}, {-0.1, 0.4}, {-0.3, 0.5}, {-0.6, 
     0.4}, {-0.5, 0.}, {0., -0.1}, {0.5, 0.}, {0.6, 0.4}, {0.3, 0.5}, {0.1, 
     0.4}, {0.2, -0.1}, {0.7, -0.5}}], 
    {PointSize[0.02], PointBox[{-0.7, -0.5}]}}, 
   {RGBColor[1, 0, 0], PointSize[0.015], 
    PointBox[{{-0.7, -0.5}, {-0.15833333333333333`, 
     0.29166666666666663`}, {-0.3166666666666666, 
     0.46666666666666656`}, {-0.5333333333333333, 
     0.3500000000000001}, {-0.43333333333333335`, 0.04999999999999996}, {
     1.3877787807814457`*^-17, -0.06666666666666668}, {0.43333333333333335`, 
     0.049999999999999975`}, {0.5333333333333333, 0.34999999999999987`}, {
     0.3166666666666665, 0.4666666666666666}, {0.15833333333333333`, 
     0.2916666666666667}, {0.7, -0.5}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{496., Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.7, 0.7}, {-0.5, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6689570927723246`*^9, 3.668957237057577*^9, 3.6689573029653473`*^9, 
   3.66895735266819*^9, 3.6689577193211613`*^9, 3.6689577552702174`*^9, 
   3.6689578159186864`*^9, 3.668957903333686*^9, 3.6874394810063114`*^9, 
   3.6874395619674544`*^9, 3.6958297569285684`*^9, 3.6958299207798295`*^9, 
   3.6958300033537083`*^9, {3.721043995785796*^9, 3.721044023985674*^9}, 
   3.7210444766511774`*^9, 3.7210445756217794`*^9, 3.72104461005704*^9, 
   3.721044778026337*^9, 3.721044815588231*^9, {3.7210448858398333`*^9, 
   3.7210449032272034`*^9}, 3.721044953277091*^9, 3.7210453861636343`*^9, {
   3.721045480083328*^9, 3.7210455450175476`*^9}, 3.7213914613548408`*^9, 
   3.721391526640956*^9, 3.7213918277451353`*^9, 3.7213918635122375`*^9, 
   3.7213920166633286`*^9, 3.721392067065216*^9, {3.9411586379645042`*^9, 
   3.9411586478053093`*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"f0a8d9b1-3889-4e4c-b069-a85836b5befb"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[2], 
          LineBox[{{-0.7, -0.5}, {-0.2, -0.1}, {-0.1, 0.4}, {-0.3, 
           0.5}, {-0.6, 0.4}, {-0.5, 0.}, {0., -0.1}, {0.5, 0.}, {0.6, 0.4}, {
           0.3, 0.5}, {0.1, 0.4}, {0.2, -0.1}, {0.7, -0.5}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              
              Line[{{-0.7, -0.5}, {-0.2, -0.1}, {-0.1, 0.4}, {-0.3, 
               0.5}, {-0.6, 0.4}, {-0.5, 0.}, {0., -0.1}, {0.5, 0.}, {0.6, 
               0.4}, {0.3, 0.5}, {0.1, 0.4}, {0.2, -0.1}, {0.7, -0.5}}]}, 
             "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{-0.7, 0.7}, {-0.5, 0.5}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[7, 360]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{-0.7, 0.7}, {-0.5, 0.5}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          
          Line[{{-0.7, -0.5}, {-0.2, -0.1}, {-0.1, 0.4}, {-0.3, 0.5}, {-0.6, 
           0.4}, {-0.5, 0.}, {0., -0.1}, {0.5, 0.}, {0.6, 0.4}, {0.3, 0.5}, {
           0.1, 0.4}, {0.2, -0.1}, {0.7, -0.5}}]}, 
         "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {{-0.7, 0.7}, {-0.5, 0.5}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            PointSize[
             Rational[7, 360]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListLinePlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, 
   {GrayLevel[0], PointSize[0.015], 
    PointBox[{{-0.7, -0.5}, {-0.2, -0.1}, {-0.1, 0.4}, {-0.3, 0.5}, {-0.6, 
     0.4}, {-0.5, 0.}, {0., -0.1}, {0.5, 0.}, {0.6, 0.4}, {0.3, 0.5}, {0.1, 
     0.4}, {0.2, -0.1}, {0.7, -0.5}}], 
    {PointSize[0.02], PointBox[{-0.7, -0.5}]}}},
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{496., Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6689570927723246`*^9, 3.668957237057577*^9, 3.6689573029653473`*^9, 
   3.66895735266819*^9, 3.6689577193211613`*^9, 3.6689577552702174`*^9, 
   3.6689578159186864`*^9, 3.668957903333686*^9, 3.6874394810063114`*^9, 
   3.6874395619674544`*^9, 3.6958297569285684`*^9, 3.6958299207798295`*^9, 
   3.6958300033537083`*^9, {3.721043995785796*^9, 3.721044023985674*^9}, 
   3.7210444766511774`*^9, 3.7210445756217794`*^9, 3.72104461005704*^9, 
   3.721044778026337*^9, 3.721044815588231*^9, {3.7210448858398333`*^9, 
   3.7210449032272034`*^9}, 3.721044953277091*^9, 3.7210453861636343`*^9, {
   3.721045480083328*^9, 3.7210455450175476`*^9}, 3.7213914613548408`*^9, 
   3.721391526640956*^9, 3.7213918277451353`*^9, 3.7213918635122375`*^9, 
   3.7213920166633286`*^9, 3.721392067065216*^9, {3.9411586379645042`*^9, 
   3.9411586478293076`*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"8e47d0db-026e-704e-ba7c-196576f9201f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"degree = \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\"  Number segments  = \"\>", "\[InvisibleSpace]", 
   "10"}],
  SequenceForm["degree = ", 3, "  Number segments  = ", 10],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.668957092775325*^9, 3.6689572370605774`*^9, 3.668957302969347*^9, 
   3.6689573526711903`*^9, 3.6689577193241615`*^9, 3.6689577552722178`*^9, 
   3.6689578159206867`*^9, 3.6689579033416862`*^9, 3.687439481021911*^9, 
   3.6874395619674544`*^9, 3.6958297569285684`*^9, 3.6958299207798295`*^9, 
   3.6958300033537083`*^9, {3.7210439958013964`*^9, 3.721044023985674*^9}, 
   3.7210444766511774`*^9, 3.7210445756373796`*^9, 3.72104461005704*^9, 
   3.721044778026337*^9, 3.721044815588231*^9, {3.7210448858398333`*^9, 
   3.7210449032272034`*^9}, 3.721044953277091*^9, 3.7210453861636343`*^9, {
   3.7210454801145277`*^9, 3.7210455450175476`*^9}, 3.7213914613860407`*^9, 
   3.721391526640956*^9, 3.7213918277451353`*^9, 3.7213918635122375`*^9, 
   3.7213920166733284`*^9, 3.721392067065216*^9, {3.9411586379955006`*^9, 
   3.941158647839699*^9}},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"487096f3-d2fd-9445-9102-0f306d8ec1cc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"knots = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1`", ",", "0.2`", ",", 
     "0.3`", ",", "0.4`", ",", "0.5`", ",", "0.6`", ",", "0.7`", ",", "0.8`", 
     ",", "0.9`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}]}],
  SequenceForm[
  "knots = ", {0., 0., 0., 0., 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 
   1., 1., 1., 1.}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.668957092775325*^9, 3.6689572370605774`*^9, 3.668957302969347*^9, 
   3.6689573526711903`*^9, 3.6689577193241615`*^9, 3.6689577552722178`*^9, 
   3.6689578159206867`*^9, 3.6689579033416862`*^9, 3.687439481021911*^9, 
   3.6874395619674544`*^9, 3.6958297569285684`*^9, 3.6958299207798295`*^9, 
   3.6958300033537083`*^9, {3.7210439958013964`*^9, 3.721044023985674*^9}, 
   3.7210444766511774`*^9, 3.7210445756373796`*^9, 3.72104461005704*^9, 
   3.721044778026337*^9, 3.721044815588231*^9, {3.7210448858398333`*^9, 
   3.7210449032272034`*^9}, 3.721044953277091*^9, 3.7210453861636343`*^9, {
   3.7210454801145277`*^9, 3.7210455450175476`*^9}, 3.7213914613860407`*^9, 
   3.721391526640956*^9, 3.7213918277451353`*^9, 3.7213918635122375`*^9, 
   3.7213920166733284`*^9, 3.721392067065216*^9, {3.9411586379955006`*^9, 
   3.941158647842993*^9}},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"98078a10-7a45-3f46-96fd-c5603420ecaa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"junction knots = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.1`", ",", "0.2`", ",", "0.3`", ",", "0.4`", ",", "0.5`", 
     ",", "0.6`", ",", "0.7`", ",", "0.8`", ",", "0.9`", ",", "1.`"}], "}"}]}],
  SequenceForm[
  "junction knots = ", {0., 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.668957092775325*^9, 3.6689572370605774`*^9, 3.668957302969347*^9, 
   3.6689573526711903`*^9, 3.6689577193241615`*^9, 3.6689577552722178`*^9, 
   3.6689578159206867`*^9, 3.6689579033416862`*^9, 3.687439481021911*^9, 
   3.6874395619674544`*^9, 3.6958297569285684`*^9, 3.6958299207798295`*^9, 
   3.6958300033537083`*^9, {3.7210439958013964`*^9, 3.721044023985674*^9}, 
   3.7210444766511774`*^9, 3.7210445756373796`*^9, 3.72104461005704*^9, 
   3.721044778026337*^9, 3.721044815588231*^9, {3.7210448858398333`*^9, 
   3.7210449032272034`*^9}, 3.721044953277091*^9, 3.7210453861636343`*^9, {
   3.7210454801145277`*^9, 3.7210455450175476`*^9}, 3.7213914613860407`*^9, 
   3.721391526640956*^9, 3.7213918277451353`*^9, 3.7213918635122375`*^9, 
   3.7213920166733284`*^9, 3.721392067065216*^9, {3.9411586379955006`*^9, 
   3.9411586478469944`*^9}},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"7affe02d-e96d-a246-a906-0a35102a2005"],

Cell[BoxData["\<\"First deboor point larger\"\>"], "Print",
 CellChangeTimes->{
  3.668957092775325*^9, 3.6689572370605774`*^9, 3.668957302969347*^9, 
   3.6689573526711903`*^9, 3.6689577193241615`*^9, 3.6689577552722178`*^9, 
   3.6689578159206867`*^9, 3.6689579033416862`*^9, 3.687439481021911*^9, 
   3.6874395619674544`*^9, 3.6958297569285684`*^9, 3.6958299207798295`*^9, 
   3.6958300033537083`*^9, {3.7210439958013964`*^9, 3.721044023985674*^9}, 
   3.7210444766511774`*^9, 3.7210445756373796`*^9, 3.72104461005704*^9, 
   3.721044778026337*^9, 3.721044815588231*^9, {3.7210448858398333`*^9, 
   3.7210449032272034`*^9}, 3.721044953277091*^9, 3.7210453861636343`*^9, {
   3.7210454801145277`*^9, 3.7210455450175476`*^9}, 3.7213914613860407`*^9, 
   3.721391526640956*^9, 3.7213918277451353`*^9, 3.7213918635122375`*^9, 
   3.7213920166733284`*^9, 3.721392067065216*^9, {3.9411586379955006`*^9, 
   3.9411586478499928`*^9}},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"a97aaa55-a404-1641-ba38-d5e12becf09b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"deboor points =\"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "0.7`"}], 
        RowBox[{"-", "0.5`"}]},
       {
        RowBox[{"-", "0.2`"}], 
        RowBox[{"-", "0.1`"}]},
       {
        RowBox[{"-", "0.1`"}], "0.4`"},
       {
        RowBox[{"-", "0.3`"}], "0.5`"},
       {
        RowBox[{"-", "0.6`"}], "0.4`"},
       {
        RowBox[{"-", "0.5`"}], "0.`"},
       {"0.`", 
        RowBox[{"-", "0.1`"}]},
       {"0.5`", "0.`"},
       {"0.6`", "0.4`"},
       {"0.3`", "0.5`"},
       {"0.1`", "0.4`"},
       {"0.2`", 
        RowBox[{"-", "0.1`"}]},
       {"0.7`", 
        RowBox[{"-", "0.5`"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["deboor points =", 
   MatrixForm[{{-0.7, -0.5}, {-0.2, -0.1}, {-0.1, 0.4}, {-0.3, 0.5}, {-0.6, 
    0.4}, {-0.5, 0.}, {0., -0.1}, {0.5, 0.}, {0.6, 0.4}, {0.3, 0.5}, {0.1, 
    0.4}, {0.2, -0.1}, {0.7, -0.5}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.668957092775325*^9, 3.6689572370605774`*^9, 3.668957302969347*^9, 
   3.6689573526711903`*^9, 3.6689577193241615`*^9, 3.6689577552722178`*^9, 
   3.6689578159206867`*^9, 3.6689579033416862`*^9, 3.687439481021911*^9, 
   3.6874395619674544`*^9, 3.6958297569285684`*^9, 3.6958299207798295`*^9, 
   3.6958300033537083`*^9, {3.7210439958013964`*^9, 3.721044023985674*^9}, 
   3.7210444766511774`*^9, 3.7210445756373796`*^9, 3.72104461005704*^9, 
   3.721044778026337*^9, 3.721044815588231*^9, {3.7210448858398333`*^9, 
   3.7210449032272034`*^9}, 3.721044953277091*^9, 3.7210453861636343`*^9, {
   3.7210454801145277`*^9, 3.7210455450175476`*^9}, 3.7213914613860407`*^9, 
   3.721391526640956*^9, 3.7213918277451353`*^9, 3.7213918635122375`*^9, 
   3.7213920166733284`*^9, 3.721392067065216*^9, {3.9411586379955006`*^9, 
   3.9411586478519936`*^9}},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"409d2de4-cdb9-ed49-bb68-71f5a8596b1d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Move a knot", "Subsubsection",
 CellChangeTimes->{{3.6689566979887447`*^9, 
  3.668956711442514*^9}},ExpressionUUID->"1fbd52b8-928b-1e42-8d53-\
f601659c12c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eps", " ", "=", " ", "0.00001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imid", " ", "=", " ", 
   RowBox[{"Round", "[", 
    RowBox[{"numk", "/", "2.0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startval", " ", "=", " ", 
   RowBox[{"knot", "[", 
    RowBox[{"[", "imid", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minv", " ", "=", " ", 
   RowBox[{
    RowBox[{"knot", "[", 
     RowBox[{"[", 
      RowBox[{"imid", " ", "-", "1"}], "]"}], "]"}], " ", "+", " ", "eps"}]}],
   " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxv", " ", "=", " ", 
    RowBox[{
     RowBox[{"knot", "[", 
      RowBox[{"[", 
       RowBox[{"imid", " ", "+", " ", "1"}], "]"}], "]"}], " ", "-", " ", 
     "eps"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<knots: \>\"", ",", "knot"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<manipulate knot imid = \>\"", ",", "imid"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<start value  =\>\"", ",", "startval"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<move between  minv=\>\"", ",", "minv", ",", "\"\<  maxv=\>\"", ",", 
     "maxv"}], "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"knot", "[", 
       RowBox[{"[", "imid", "]"}], "]"}], " ", "=", " ", "knotval"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jpts", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"curve", "[", 
         RowBox[{"knot", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"n", "+", "1"}], ",", 
          RowBox[{"numk", " ", "-", " ", "n"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cplot", "=", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"curve", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"knot", "[", 
           RowBox[{"[", 
            RowBox[{"n", "+", "1"}], "]"}], "]"}], ",", 
          RowBox[{"knot", "[", 
           RowBox[{"[", 
            RowBox[{"numk", "-", "n"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Green"}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"points", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
         RowBox[{"Point", "[", "dd", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"dd", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ddplot", "=", 
      RowBox[{"ListLinePlot", "[", "dd", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"jptsplot", " ", "=", " ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
         RowBox[{"Point", "[", "jpts", "]"}], ",", "Magenta", ",", 
         RowBox[{"Point", "[", 
          RowBox[{"jpts", "[", 
           RowBox[{"[", 
            RowBox[{"imid", "-", "n"}], "]"}], "]"}], "]"}]}], "}"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ddplot", ",", " ", "cplot", ",", "points", ",", "jptsplot"}],
         "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}]}], ")"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"knotval", ",", "startval"}], "}"}], ",", "minv", ",", "maxv"}],
     "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6689552942564554`*^9, 3.6689556310317183`*^9}, {
  3.6689556867899075`*^9, 3.6689557271522155`*^9}, {3.6689557802092505`*^9, 
  3.6689558584977283`*^9}, {3.6689559350871086`*^9, 3.6689560269863653`*^9}, {
  3.6689560926751223`*^9, 3.6689561210587463`*^9}, {3.6689562336451855`*^9, 
  3.668956234135214*^9}, {3.668956452232688*^9, 3.6689564851625714`*^9}, {
  3.6874395420705194`*^9, 3.6874395577841473`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"91d5b605-c676-9f47-b2d7-3f52586249e2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"knots: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1`", ",", "0.2`", ",", 
     "0.3`", ",", "0.4`", ",", "0.5`", ",", "0.6`", ",", "0.7`", ",", "0.8`", 
     ",", "0.9`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`"}], "}"}]}],
  SequenceForm[
  "knots: ", {0., 0., 0., 0., 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.,
    1., 1., 1.}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6689570929293337`*^9, 3.668957237265589*^9, 3.668957303097355*^9, 
   3.6689573528171988`*^9, 3.6689577194871707`*^9, 3.6689577553922243`*^9, 
   3.668957816039693*^9, 3.6689579034646935`*^9, 3.6874394811935115`*^9, 
   3.6874395620610547`*^9, 3.6958297571313686`*^9, 3.69582992088903*^9, 
   3.6958300034005084`*^9, {3.7210439959729967`*^9, 3.721044024204074*^9}, 
   3.7210445756997795`*^9, 3.7210446101038404`*^9, 3.7210447780731373`*^9, 
   3.7210448156350307`*^9, 3.7210454945953536`*^9, 3.721391461557641*^9, 
   3.721391526859356*^9, 3.721391827791935*^9, 3.721391863559037*^9, 
   3.721392016743329*^9, 3.7213920671120167`*^9, {3.941158638180401*^9, 
   3.9411586479009933`*^9}},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"6c63cdcf-f803-4345-aa61-f68b686de296"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"manipulate knot imid = \"\>", "\[InvisibleSpace]", "8"}],
  SequenceForm["manipulate knot imid = ", 8],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6689570929293337`*^9, 3.668957237265589*^9, 3.668957303097355*^9, 
   3.6689573528171988`*^9, 3.6689577194871707`*^9, 3.6689577553922243`*^9, 
   3.668957816039693*^9, 3.6689579034646935`*^9, 3.6874394811935115`*^9, 
   3.6874395620610547`*^9, 3.6958297571313686`*^9, 3.69582992088903*^9, 
   3.6958300034005084`*^9, {3.7210439959729967`*^9, 3.721044024204074*^9}, 
   3.7210445756997795`*^9, 3.7210446101038404`*^9, 3.7210447780731373`*^9, 
   3.7210448156350307`*^9, 3.7210454945953536`*^9, 3.721391461557641*^9, 
   3.721391526859356*^9, 3.721391827791935*^9, 3.721391863559037*^9, 
   3.721392016743329*^9, 3.7213920671120167`*^9, {3.941158638180401*^9, 
   3.9411586479039936`*^9}},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"55b5aab1-d71e-0d4d-beca-c878a61f0dab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"start value  =\"\>", "\[InvisibleSpace]", "0.4`"}],
  SequenceForm["start value  =", 0.4],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6689570929293337`*^9, 3.668957237265589*^9, 3.668957303097355*^9, 
   3.6689573528171988`*^9, 3.6689577194871707`*^9, 3.6689577553922243`*^9, 
   3.668957816039693*^9, 3.6689579034646935`*^9, 3.6874394811935115`*^9, 
   3.6874395620610547`*^9, 3.6958297571313686`*^9, 3.69582992088903*^9, 
   3.6958300034005084`*^9, {3.7210439959729967`*^9, 3.721044024204074*^9}, 
   3.7210445756997795`*^9, 3.7210446101038404`*^9, 3.7210447780731373`*^9, 
   3.7210448156350307`*^9, 3.7210454945953536`*^9, 3.721391461557641*^9, 
   3.721391526859356*^9, 3.721391827791935*^9, 3.721391863559037*^9, 
   3.721392016743329*^9, 3.7213920671120167`*^9, {3.941158638180401*^9, 
   3.941158647911993*^9}},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"fab53414-2eb0-fd42-8b3e-cee1adffb479"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"move between  minv=\"\>", "\[InvisibleSpace]", "0.30001`", 
   "\[InvisibleSpace]", "\<\"  maxv=\"\>", "\[InvisibleSpace]", "0.49999`"}],
  SequenceForm["move between  minv=", 0.30001, "  maxv=", 0.49999],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6689570929293337`*^9, 3.668957237265589*^9, 3.668957303097355*^9, 
   3.6689573528171988`*^9, 3.6689577194871707`*^9, 3.6689577553922243`*^9, 
   3.668957816039693*^9, 3.6689579034646935`*^9, 3.6874394811935115`*^9, 
   3.6874395620610547`*^9, 3.6958297571313686`*^9, 3.69582992088903*^9, 
   3.6958300034005084`*^9, {3.7210439959729967`*^9, 3.721044024204074*^9}, 
   3.7210445756997795`*^9, 3.7210446101038404`*^9, 3.7210447780731373`*^9, 
   3.7210448156350307`*^9, 3.7210454945953536`*^9, 3.721391461557641*^9, 
   3.721391526859356*^9, 3.721391827791935*^9, 3.721391863559037*^9, 
   3.721392016743329*^9, 3.7213920671120167`*^9, {3.941158638180401*^9, 
   3.9411586479129963`*^9}},
 CellLabel->
  "During evaluation of \
In[71]:=",ExpressionUUID->"b1fd7961-c71d-9641-b0f4-1ca5ab0a8491"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`knotval$$ = 0.4, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`knotval$$], 0.4}, 0.30001, 0.49999, ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    360., {108.38015107298303`, 114.1120848769791}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`knotval$$ = 0.4}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, 
      "Body" :> (
       Part[$CellContext`knot, $CellContext`imid] = $CellContext`knotval$$; \
$CellContext`jpts = Table[
          $CellContext`curve[
           
           Part[$CellContext`knot, $CellContext`i]], {$CellContext`i, \
$CellContext`n + 1, $CellContext`numk - $CellContext`n, 
           1}]; $CellContext`cplot = ParametricPlot[
          $CellContext`curve[$CellContext`t], {$CellContext`t, 
           Part[$CellContext`knot, $CellContext`n + 1], 
           Part[$CellContext`knot, $CellContext`numk - $CellContext`n]}, 
          PlotStyle -> {Thick, Green}]; $CellContext`points = Graphics[{Black, 
           PointSize[0.015], 
           Point[$CellContext`dd], 
           PointSize[0.02], 
           Point[
            Part[$CellContext`dd, 1]]}]; $CellContext`ddplot = 
        ListLinePlot[$CellContext`dd]; $CellContext`jptsplot = Graphics[{Red, 
           PointSize[0.015], 
           Point[$CellContext`jpts], Magenta, 
           Point[
            Part[$CellContext`jpts, $CellContext`imid - $CellContext`n]]}]; 
       Show[{$CellContext`ddplot, $CellContext`cplot, $CellContext`points, \
$CellContext`jptsplot}, Axes -> False]), 
      "Specifications" :> {{{$CellContext`knotval$$, 0.4}, 0.30001, 0.49999}},
       "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407.1, {150.41599091673302`, 156.1479247207291}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.668957092951335*^9, 3.66895723728559*^9, 3.6689573031153555`*^9, 
   3.6689573528381996`*^9, 3.668957719603177*^9, 3.6689577554092255`*^9, 
   3.668957816054694*^9, 3.6689579034826946`*^9, 3.687439481255912*^9, 
   3.687439562076655*^9, 3.695829757224969*^9, 3.6958299209046297`*^9, 
   3.695830003416108*^9, {3.7210439960821967`*^9, 3.721044024219674*^9}, 
   3.7210445757153797`*^9, 3.72104461011944*^9, 3.7210447780887375`*^9, 
   3.721044815650631*^9, 3.7210454946109533`*^9, 3.7213914616668415`*^9, 
   3.721391526859356*^9, 3.721391827807535*^9, 3.7213918635746374`*^9, 
   3.7213920167633286`*^9, 3.7213920671276164`*^9, {3.9411586382313976`*^9, 
   3.9411586479509945`*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"237f18e0-f219-034a-96a0-d7b0f46cd184"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Move a control point", "Section",
 CellChangeTimes->{{3.668956717387854*^9, 
  3.668956722716159*^9}},ExpressionUUID->"2882bed3-c954-5a4e-a19e-\
46dcf302d4d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ddt", " ", "=", " ", 
     RowBox[{"Transpose", "[", "dd", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxmove", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"ddt", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imiddd", " ", "=", " ", 
     RowBox[{"Round", "[", 
      RowBox[{"numd", "/", "2.0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"startdd", " ", "=", " ", 
     RowBox[{"dd", "[", 
      RowBox[{"[", 
       RowBox[{"imiddd", ",", "2"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minddy", " ", "=", 
     RowBox[{
      RowBox[{"dd", "[", 
       RowBox[{"[", 
        RowBox[{"imiddd", " ", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
      "maxmove"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxddy", " ", "=", " ", 
     RowBox[{
      RowBox[{"dd", "[", 
       RowBox[{"[", 
        RowBox[{"imiddd", " ", ",", "2"}], "]"}], "]"}], " ", "+", " ", 
      "maxmove"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<manipulate deboor imid = \>\"", ",", "imiddd"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<start value  =\>\"", ",", "startdd"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<move between  minddy=\>\"", ",", "minddy", ",", "\"\<  maxddy=\>\"",
       ",", "maxddy"}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vminx", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"ddt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vmaxx", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"ddt", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vminy", " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{"ddt", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vmaxy", " ", "=", " ", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"ddt", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "+", " ", "maxmove"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<control polygon min and max \>\"", ",", "vminx", ",", "\"\< \>\"", 
      ",", "vmaxx", ",", "\"\<  \>\"", ",", "vminy", ",", "\"\<  \>\"", ",", 
      "vmaxy"}], "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"dd", "[", 
         RowBox[{"[", 
          RowBox[{"imiddd", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
        "ddval"}], ";", "\[IndentingNewLine]", 
       RowBox[{"jpts", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"curve", "[", 
           RowBox[{"knot", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"n", "+", "1"}], ",", 
            RowBox[{"numk", " ", "-", " ", "n"}], ",", "1"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cplot", "=", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"curve", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"knot", "[", 
             RowBox[{"[", 
              RowBox[{"n", "+", "1"}], "]"}], "]"}], ",", 
            RowBox[{"knot", "[", 
             RowBox[{"[", 
              RowBox[{"numk", "-", "n"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Green"}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"points", "=", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
           RowBox[{"Point", "[", "dd", "]"}], ",", 
           RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"dd", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ddplot", "=", 
        RowBox[{"ListLinePlot", "[", "dd", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"jptsplot", " ", "=", " ", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
           RowBox[{"Point", "[", "jpts", "]"}], ",", "Magenta", ",", 
           RowBox[{"Point", "[", 
            RowBox[{"jpts", "[", 
             RowBox[{"[", 
              RowBox[{"imid", "-", "n"}], "]"}], "]"}], "]"}]}], "}"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ddplot", ",", " ", "cplot", ",", "points", ",", "jptsplot"}], 
          "}"}], ",", 
         RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vminx", ",", "vmaxx"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"vminy", ",", "vmaxy"}], "}"}]}], "}"}]}]}], "]"}]}], 
      ")"}], ",", "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ddval", ",", "startdd"}], "}"}], ",", "minddy", ",", 
       "maxddy"}], "}"}]}], "]"}], "\[IndentingNewLine]", " "}]}]], "Input",
 CellChangeTimes->{{3.66895674703255*^9, 3.6689568879656105`*^9}, {
   3.6689569301900253`*^9, 3.6689570056063395`*^9}, {3.668957072540168*^9, 
   3.6689570822477226`*^9}, {3.668957189760872*^9, 3.668957226565977*^9}, {
   3.6689572743307095`*^9, 3.6689573466498456`*^9}, {3.6689574081093607`*^9, 
   3.6689574404822125`*^9}, {3.6689574925781927`*^9, 
   3.6689575559728184`*^9}, {3.668957600464363*^9, 3.668957705752385*^9}, 
   3.668957751673012*^9, {3.6689577898031926`*^9, 3.6689578122544765`*^9}, {
   3.6689578762761383`*^9, 3.6689578956612473`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"6d814590-8276-d74a-8538-73d446f5dde3"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"manipulate deboor imid = \"\>", "\[InvisibleSpace]", "6"}],
  SequenceForm["manipulate deboor imid = ", 6],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6689570930613413`*^9, 3.6689572374045973`*^9, 3.668957303224362*^9, 
   3.6689573529472055`*^9, 3.668957719617178*^9, 3.668957755512231*^9, 
   3.6689578161607*^9, 3.668957903587701*^9, 3.687439481505512*^9, 
   3.6874395621702547`*^9, 3.695829757458969*^9, 3.69582992101383*^9, 
   3.6958300035253086`*^9, {3.721043996503398*^9, 3.721044024328874*^9}, 
   3.7210445758245797`*^9, 3.7210446102130404`*^9, 3.7210447781823373`*^9, 
   3.721044815744231*^9, 3.721045494720154*^9, 3.721391461963242*^9, 
   3.721391526952956*^9, 3.7213918279011354`*^9, 3.7213918636682377`*^9, 
   3.721392016845729*^9, 3.721392067221217*^9, {3.9411586383315086`*^9, 
   3.941158648041996*^9}},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"0b712b49-5286-cb4a-926a-32706778c317"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"start value  =\"\>", "\[InvisibleSpace]", "0.`"}],
  SequenceForm["start value  =", 0.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6689570930613413`*^9, 3.6689572374045973`*^9, 3.668957303224362*^9, 
   3.6689573529472055`*^9, 3.668957719617178*^9, 3.668957755512231*^9, 
   3.6689578161607*^9, 3.668957903587701*^9, 3.687439481505512*^9, 
   3.6874395621702547`*^9, 3.695829757458969*^9, 3.69582992101383*^9, 
   3.6958300035253086`*^9, {3.721043996503398*^9, 3.721044024328874*^9}, 
   3.7210445758245797`*^9, 3.7210446102130404`*^9, 3.7210447781823373`*^9, 
   3.721044815744231*^9, 3.721045494720154*^9, 3.721391461963242*^9, 
   3.721391526952956*^9, 3.7213918279011354`*^9, 3.7213918636682377`*^9, 
   3.721392016845729*^9, 3.721392067221217*^9, {3.9411586383315086`*^9, 
   3.941158648043993*^9}},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"633cef7d-86ea-b44c-8aa1-b6c5f860dceb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"move between  minddy=\"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.5`"}], "\[InvisibleSpace]", "\<\"  maxddy=\"\>", 
   "\[InvisibleSpace]", "0.5`"}],
  SequenceForm["move between  minddy=", -0.5, "  maxddy=", 0.5],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6689570930613413`*^9, 3.6689572374045973`*^9, 3.668957303224362*^9, 
   3.6689573529472055`*^9, 3.668957719617178*^9, 3.668957755512231*^9, 
   3.6689578161607*^9, 3.668957903587701*^9, 3.687439481505512*^9, 
   3.6874395621702547`*^9, 3.695829757458969*^9, 3.69582992101383*^9, 
   3.6958300035253086`*^9, {3.721043996503398*^9, 3.721044024328874*^9}, 
   3.7210445758245797`*^9, 3.7210446102130404`*^9, 3.7210447781823373`*^9, 
   3.721044815744231*^9, 3.721045494720154*^9, 3.721391461963242*^9, 
   3.721391526952956*^9, 3.7213918279011354`*^9, 3.7213918636682377`*^9, 
   3.721392016845729*^9, 3.721392067221217*^9, {3.9411586383315086`*^9, 
   3.9411586480479927`*^9}},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"917f1ee7-e667-3045-9a89-2a45a700579d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"control polygon min and max \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.7`"}], "\[InvisibleSpace]", "\<\" \"\>", 
   "\[InvisibleSpace]", "0.7`", "\[InvisibleSpace]", "\<\"  \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "0.5`"}], "\[InvisibleSpace]", "\<\"  \"\>", 
   "\[InvisibleSpace]", "1.`"}],
  SequenceForm[
  "control polygon min and max ", -0.7, " ", 0.7, "  ", -0.5, "  ", 1.],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6689570930613413`*^9, 3.6689572374045973`*^9, 3.668957303224362*^9, 
   3.6689573529472055`*^9, 3.668957719617178*^9, 3.668957755512231*^9, 
   3.6689578161607*^9, 3.668957903587701*^9, 3.687439481505512*^9, 
   3.6874395621702547`*^9, 3.695829757458969*^9, 3.69582992101383*^9, 
   3.6958300035253086`*^9, {3.721043996503398*^9, 3.721044024328874*^9}, 
   3.7210445758245797`*^9, 3.7210446102130404`*^9, 3.7210447781823373`*^9, 
   3.721044815744231*^9, 3.721045494720154*^9, 3.721391461963242*^9, 
   3.721391526952956*^9, 3.7213918279011354`*^9, 3.7213918636682377`*^9, 
   3.721392016845729*^9, 3.721392067221217*^9, {3.9411586383315086`*^9, 
   3.941158648050993*^9}},
 CellLabel->
  "During evaluation of \
In[81]:=",ExpressionUUID->"b5169100-d50b-c649-bf48-caed9160ce3f"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ddval$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`ddval$$], 0.}, -0.5, 0.5, ControlType -> 
      Manipulator}}, Typeset`size$$ = {
    360., {108.38015107298304`, 114.11208487697911`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ddval$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, 
      "Body" :> (
       Part[$CellContext`dd, $CellContext`imiddd, 
          2] = $CellContext`ddval$$; $CellContext`jpts = Table[
          $CellContext`curve[
           
           Part[$CellContext`knot, $CellContext`i]], {$CellContext`i, \
$CellContext`n + 1, $CellContext`numk - $CellContext`n, 
           1}]; $CellContext`cplot = ParametricPlot[
          $CellContext`curve[$CellContext`t], {$CellContext`t, 
           Part[$CellContext`knot, $CellContext`n + 1], 
           Part[$CellContext`knot, $CellContext`numk - $CellContext`n]}, 
          PlotStyle -> {Thick, Green}]; $CellContext`points = Graphics[{Black, 
           PointSize[0.015], 
           Point[$CellContext`dd], 
           PointSize[0.02], 
           Point[
            Part[$CellContext`dd, 1]]}]; $CellContext`ddplot = 
        ListLinePlot[$CellContext`dd]; $CellContext`jptsplot = Graphics[{Red, 
           PointSize[0.015], 
           Point[$CellContext`jpts], Magenta, 
           Point[
            Part[$CellContext`jpts, $CellContext`imid - $CellContext`n]]}]; 
       Show[{$CellContext`ddplot, $CellContext`cplot, $CellContext`points, \
$CellContext`jptsplot}, Axes -> False, 
         PlotRange -> {{$CellContext`vminx, $CellContext`vmaxx}, \
{$CellContext`vminy, $CellContext`vmaxy}}]), 
      "Specifications" :> {{{$CellContext`ddval$$, 0.}, -0.5, 0.5}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407.1, {150.41599091673305`, 156.14792472072912`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6689573529662066`*^9, 3.66895771964318*^9, 3.6689577555392327`*^9, 
   3.6689578161887016`*^9, 3.6689579036057014`*^9, 3.6874394815211124`*^9, 
   3.687439562185855*^9, 3.6958297574745693`*^9, 3.6958299210294304`*^9, 
   3.6958300035409083`*^9, {3.7210439965189977`*^9, 3.7210440243444743`*^9}, 
   3.7210445758401794`*^9, 3.7210446102286406`*^9, 3.7210447781979375`*^9, 
   3.7210448157598314`*^9, 3.721045494735754*^9, 3.721391461994442*^9, 
   3.721391526968556*^9, 3.7213918279167356`*^9, 3.721391863683838*^9, 
   3.721392016861329*^9, 3.721392067236817*^9, {3.9411586383805084`*^9, 
   3.941158648086996*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"52e4a52a-d40a-e74b-a6f7-3aca13000a83"]
}, Open  ]],

Cell["Derivative of the curve", "Text",
 CellChangeTimes->{{3.695830039146883*^9, 
  3.6958300490234118`*^9}},ExpressionUUID->"e08c8c8e-8f48-7c4e-ba9e-\
4520ea337934"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"curve", "'"}], "[", "0.5", "]"}]}]], "Input",
 CellChangeTimes->{{3.6958299369102583`*^9, 3.6958299566081204`*^9}, {
  3.6958299995014286`*^9, 3.6958300314716697`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"dd5e47b5-fb9a-cb43-8985-011634e9fa3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.`", ",", "8.881784197001253`*^-17"}], "}"}]], "Output",
 CellChangeTimes->{{3.695829950453082*^9, 3.695829957434922*^9}, {
   3.695830003634509*^9, 3.6958300323140707`*^9}, {3.721043996643798*^9, 
   3.721044024438074*^9}, 3.7210445759337797`*^9, 3.7210446103242407`*^9, 
   3.7210447783071375`*^9, 3.721044815853431*^9, 3.721045494844954*^9, 
   3.7213914621036425`*^9, 3.721391527062156*^9, 3.721391828010336*^9, 
   3.7213918637774377`*^9, 3.7213920169549294`*^9, 3.7213920673304167`*^9, {
   3.941158638442507*^9, 3.9411586481489964`*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"7be27943-26fc-b545-aa92-7e90181dc553"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
CellContext->Notebook,
Magnification:>1. Inherited,
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9e953149-0050-e540-961c-a4ca0a003227"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 161, 3, 33, "Text",ExpressionUUID->"1b4daf78-738e-fe44-af4f-1a39a058771a"],
Cell[CellGroupData[{
Cell[744, 27, 166, 3, 96, "Title",ExpressionUUID->"0c640dae-b062-3c48-b26f-74d66bf0ea6e"],
Cell[CellGroupData[{
Cell[935, 34, 16150, 397, 1721, "Input",ExpressionUUID->"c376f1eb-64b6-7e4d-8bd1-1440daa4f406"],
Cell[17088, 433, 91073, 1590, 323, "Output",ExpressionUUID->"f0a8d9b1-3889-4e4c-b069-a85836b5befb"],
Cell[108164, 2025, 9847, 227, 395, "Output",ExpressionUUID->"8e47d0db-026e-704e-ba7c-196576f9201f"],
Cell[CellGroupData[{
Cell[118036, 2256, 1245, 22, 22, "Print",ExpressionUUID->"487096f3-d2fd-9445-9102-0f306d8ec1cc"],
Cell[119284, 2280, 1467, 27, 22, "Print",ExpressionUUID->"98078a10-7a45-3f46-96fd-c5603420ecaa"],
Cell[120754, 2309, 1381, 25, 22, "Print",ExpressionUUID->"7affe02d-e96d-a246-a906-0a35102a2005"],
Cell[122138, 2336, 1034, 16, 22, "Print",ExpressionUUID->"a97aaa55-a404-1641-ba38-d5e12becf09b"],
Cell[123175, 2354, 2362, 60, 204, "Print",ExpressionUUID->"409d2de4-cdb9-ed49-bb68-71f5a8596b1d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125586, 2420, 164, 3, 43, "Subsubsection",ExpressionUUID->"1fbd52b8-928b-1e42-8d53-f601659c12c6"],
Cell[CellGroupData[{
Cell[125775, 2427, 4620, 120, 370, "Input",ExpressionUUID->"91d5b605-c676-9f47-b2d7-3f52586249e2"],
Cell[CellGroupData[{
Cell[130420, 2551, 1309, 25, 22, "Print",ExpressionUUID->"6c63cdcf-f803-4345-aa61-f68b686de296"],
Cell[131732, 2578, 999, 18, 22, "Print",ExpressionUUID->"55b5aab1-d71e-0d4d-beca-c878a61f0dab"],
Cell[132734, 2598, 984, 18, 22, "Print",ExpressionUUID->"fab53414-2eb0-fd42-8b3e-cee1adffb479"],
Cell[133721, 2618, 1101, 19, 22, "Print",ExpressionUUID->"b1fd7961-c71d-9641-b0f4-1ca5ab0a8491"]
}, Open  ]],
Cell[134837, 2640, 3632, 69, 323, "Output",ExpressionUUID->"237f18e0-f219-034a-96a0-d7b0f46cd184"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138518, 2715, 165, 3, 70, "Section",ExpressionUUID->"2882bed3-c954-5a4e-a19e-46dcf302d4d5"],
Cell[CellGroupData[{
Cell[138708, 2722, 6640, 168, 599, "Input",ExpressionUUID->"6d814590-8276-d74a-8538-73d446f5dde3"],
Cell[CellGroupData[{
Cell[145373, 2894, 989, 18, 22, "Print",ExpressionUUID->"0b712b49-5286-cb4a-926a-32706778c317"],
Cell[146365, 2914, 970, 18, 22, "Print",ExpressionUUID->"633cef7d-86ea-b44c-8aa1-b6c5f860dceb"],
Cell[147338, 2934, 1101, 20, 22, "Print",ExpressionUUID->"917f1ee7-e667-3045-9a89-2a45a700579d"],
Cell[148442, 2956, 1276, 24, 22, "Print",ExpressionUUID->"b5169100-d50b-c649-bf48-caed9160ce3f"]
}, Open  ]],
Cell[149733, 2983, 3664, 70, 323, "Output",ExpressionUUID->"52e4a52a-d40a-e74b-a6f7-3aca13000a83"]
}, Open  ]],
Cell[153412, 3056, 167, 3, 30, "Text",ExpressionUUID->"e08c8c8e-8f48-7c4e-ba9e-4520ea337934"],
Cell[CellGroupData[{
Cell[153604, 3063, 317, 6, 47, "Input",ExpressionUUID->"dd5e47b5-fb9a-cb43-8985-011634e9fa3e"],
Cell[153924, 3071, 664, 10, 34, "Output",ExpressionUUID->"7be27943-26fc-b545-aa92-7e90181dc553"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

